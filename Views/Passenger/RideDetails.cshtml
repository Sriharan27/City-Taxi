@model Reservation
@{
    ViewData["Title"] = "Passenger Dashboard";
    Layout = "~/Views/Passenger/PassengerLayout.cshtml";

    var pickupCoords = Model.PickupLocation.Split(',').Select(double.Parse).ToArray();
    var dropoffCoords = Model.DropoffLocation.Split(',').Select(double.Parse).ToArray();

    var pickupLat = pickupCoords[0];
    var pickupLng = pickupCoords[1];
    var dropoffLat = dropoffCoords[0];
    var dropoffLng = dropoffCoords[1];
}
<input type="hidden" name="Reservation-ID" id="Reservation-ID" value="@Model.ReservationID" disabled />
<div class="alert alert-success" role="alert" id="driver-Accepted" style="display: none;">
    Driver Accepted the Ride!
</div>
<div class="container mt-4">
    <div class="row">
        <!-- Left Column: Map Card -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h4>Trip Route</h4>
                </div>
                <div class="card-body">
                    <div id="map" style="height: 400px; width: 100%;"></div>
                </div>
            </div>
        </div>

        <!-- Right Column: Driver Info Card -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h4>Ride Information</h4>
                </div>
                <div class="card-body">
                    <h5>Driver Details</h5>
                    <hr />
                    @if (Model != null)
                    {
                        <div class="row">
                            <!-- Driver Image Section -->
                            <div class="col-6 p-5">
                                <div class="img" style="width: 100px; height: 100px; overflow: hidden; border-radius: 50%;">
                                    @if (Model.Driver.Image != null)
                                    {
                                        <img src="@Url.Action("GetDriverImage", "Admin", new { id = Model.DriverID })" alt="Driver Image"
                                             style="width: 100%; height: 100%; object-fit: cover;" />
                                    }
                                    else
                                    {
                                        <span>No Image</span>
                                    }
                                </div>
                            </div>

                            <!-- Driver Information -->
                            <div class="col-6">
                                <p><strong>Driver Name:</strong>@($"{Model.Driver.FirstName} {Model.Driver.LastName}")</p>

                                <p><strong>Driver Phone Number:</strong> @Model.Driver.PhoneNumber           </p>
                                <p> <strong>Vehicle: </strong> @($"{Model.Vehicle.VehicleMake} {Model.Vehicle.VehicleModel}") </p>
                                <p ><strong>Vehicle Number:</strong> @Model.Vehicle.VehicleNumberPlate </p>
                            </div>
                        </div>

                        <br />

                      
                        <hr />

                        <!-- Trip Details -->
                        <h5>Trip Details</h5>
                        <hr />
                        <div class="d-flex flex-wrap">
                            <div class="col-12 col-md-4 mb-3">
                                <p>
                                    <strong>
                                        Trip Status:
                                    </strong><br>
                                    <span id="trip-status">@Model.ReservationStatus</span>
                                </p>
                            </div>
                            <div class="col-12 col-md-4 mb-3">
                                <p>
                                    <strong>
                                    Trip Distance:</strong>

                                     <br>
                                    @Model.TripDistance km
                                </p>
                            </div>
                            <div class="col-12 col-md-4 mb-3">
                                <p>
                                    <strong>
                                        Trip Fare:
                                    </strong><br>
                                   Rs @Model.TripPrice.ToString("F2")
                                </p>
                            </div>
                        </div>

                    }
                    else
                    {
                        <p>No driver information available.</p>
                    }
                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=@ViewData["Key"]&libraries=places,geometry&callback=initMap" async defer></script>
    <script>
        let checkReservationStatusInterval, TripStartedDisplayMessage;
        showDriverAcceptedAlert();

        // Initialize and add the map
        function initMap() {
            // Set the locations using model data
            var pickupLocation = { lat: @pickupLat, lng: @pickupLng }; // Pickup location from model
            var dropoffLocation = { lat: @dropoffLat, lng: @dropoffLng }; // Dropoff location from model

            // Create the map
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 12,
                center: pickupLocation // Center the map on the pickup location
            });

            // Create the markers for pickup and dropoff
            var pickupMarker = new google.maps.Marker({
                position: pickupLocation,
                map: map,
                title: 'Pickup Location'
            });

            var dropoffMarker = new google.maps.Marker({
                position: dropoffLocation,
                map: map,
                title: 'Dropoff Location'
            });

            // Directions service and renderer
            var directionsService = new google.maps.DirectionsService();
            var directionsRenderer = new google.maps.DirectionsRenderer();
            directionsRenderer.setMap(map);

            // Calculate and display the route
            directionsService.route({
                origin: pickupLocation,
                destination: dropoffLocation,
                travelMode: google.maps.TravelMode.DRIVING
            }, function (response, status) {
                if (status === 'OK') {
                    directionsRenderer.setDirections(response);
                } else {
                    alert('Directions request failed due to ' + status);
                }
            });
        }
        function showDriverAcceptedAlert() {
            var alertDiv = document.getElementById('driver-Accepted');
            alertDiv.style.display = 'block'; // Show the alert

            // Set a timeout to fade out the alert after 8 seconds
            setTimeout(function () {
                fadeOut(alertDiv);
            }, 8000); // 8000 milliseconds = 8 seconds
        }

        function fadeOut(element) {
            var op = 1;  // Initial opacity
            var timer = setInterval(function () {
                if (op <= 0.1) {
                    clearInterval(timer);
                    element.style.display = 'none';  // Hide the element once faded out
                }
                element.style.opacity = op;  // Set the opacity
                op -= op * 0.1;  // Decrease opacity
            }, 50); // Change opacity every 50 milliseconds
        }
        function checkForReservationStatus() {
            var reservationID = document.getElementById('Reservation-ID').value;

            fetch(`/Passenger/checkReservationStatus?reservationId=${reservationID}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Error checking for new reservations');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.reservationStatus == "Trip Started" && TripStartedDisplayMessage == null) {
                        alert("Trip Started!");
                        document.getElementById('trip-status').textContent = "Trip Started";
                        TripStartedDisplayMessage = 1;
                    }
                    else if (data.reservationStatus == "Trip Ended") {
                        alert("Trip Ended!");
                        window.location.href = `/Passenger/DriverRating?reservationId=${reservationID}`;
                    }
                })
                .catch(error => {
                    console.error(error);
                });
        }
        
        checkReservationStatusInterval = setInterval(checkForReservationStatus, 5000);

    </script>
}
